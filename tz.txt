Тестовое задание
    +1. Требуется разработать клиентское web-приложение, отображающее таблицу с данными из прилагаемого файла table-data.json.
    +2. Интерфейс пользователя должен быть реализован на базе фреймворка Vue.js с использованием Vuetify.js.
    +3. Стартовая страница должна содержать таблицу, представленную на рис. 1.
    +4. Таблица должна обеспечивать сортировку данных по столбцам и поиск (фильтрацию) данных по каждому столбцу раздельно.
    +5. Показатели типа «дата-время» должны отображаться в формате «ДД.ММ.ГГГГ чч:мм». Для отсутствующих отметок времени должен отображаться символ «–».
    +6. Сортировка элементов в таблице должна производиться по возрастанию/убыванию значения соответствующего столбца (с учетом значений даты-времени).
    +7. При клике на строке должна открыться модальная popup-форма редактирования данных по вагону.
    +8. Форма должна отображать значения всех полей выбранного вагона и позволять редактировать значения полей: «Дата-время операции», «Номер поезда», «Номер накладной» и «ИД накладной». 
    +9. В форме редактирования должна выполняться валидация значений для полей:
        + «Дата-время операции» – принимается любая валидная дата до текущего момента времени;
        + «Номер поезда» – любые 4 цифры;
        + «Номер накладной» – должен соответствовать маске «ЭО######», где «#» - любая цифра.
    +10. Также форма должна содержать кнопки «ОК» и «Отмена».
    +11. При нажатии кнопки «ОК» изменения, выполненные в форме, должны сохраниться в работающем экземпляре приложения и автоматически отобразиться в таблице; после сохранения изменений форма должна закрыться.
    +12. Верстка страниц должна быть по возможности адаптивной и учитывать различные размеры окна.
    +13. Приложение должно работать в текущих версиях браузеров Яндекс.Браузер и Microsoft Edge.
14. Проект должен сопровождаться краткой инструкцией по запуску, оформленной в виде Word-документа.

Результаты тестового задания:
Этап 1. Озвученные оценка трудоемкости и плановая дата готовности задания.
Этап 2. Собственно результат в составе:
•	Исходный код приложения, представленный либо в виде репозитория на github, либо в виде архива (rar, zip) папки с проектом. Инструкция по запуску проекта.
•	Ссылка на работающее приложение в одной из публично доступных «песочниц» (например, codepen.io). 

Примечания:
Дополнительные (сверх ТЗ) функции приложения, реализованные разработчиком по своему усмотрению, являются плюсом при оценке результатов.
______________
